package cpj.sesion3.lab1;

import java.util.ArrayList;

public class NombresNumeros {
	public static void main(String[] args) {
		processArray(args);
	}

	private static void processArray(String[] arr) {
		ArrayList<String> numeros = new ArrayList<String>();
		ArrayList<String> nombres = new ArrayList<String>();
		
		String indicesDeNumeros = "";
		
		
		String[] nombresArr = new String[30];

		for (int i = 0; i < arr.length; i++) {
			if (isNumeric(arr[i])) {
				
				indicesDeNumeros += "-" + i;
			} else {
				nombres.add(arr[i]);
			}
		}

		showArray(nombres);
		System.out.println();
		
		System.out.println();
		//System.out.print(add(numeros));
		
		indicesDeNumeros = indicesDeNumeros.substring(1);
		String[] arrIndicesNumeros = indicesDeNumeros.split("-");
		String[] numerosArreglo = new String[arrIndicesNumeros.length];
		for (int i = 0; i < arrIndicesNumeros.length; i++) {
			numerosArreglo[i] = arr[Integer.parseInt(arrIndicesNumeros[i])];
		}
		
		System.out.println();
		mostrarArreglo(numerosArreglo);
	}
	
	private static void mostrarArreglo(String[] arreglo) {
		String resultado = "";
		for (int i = 0; i < arreglo.length; i++) {
			if(arreglo.length - 1 == i) {
				resultado += arreglo[i];
			}else {
				resultado += arreglo[i] + ", ";
			}
			
		}
		System.out.println(resultado);
	}

	// Comprueba si es un numero
	private static boolean isNumeric(String str) {
		try {
			Double.parseDouble(str);
			return true;
		} catch (NumberFormatException e) {
			return false;
		}
	}

	private static void showArray(ArrayList<String> arr) {
		for (int i = 0; i < arr.size(); i++) {
			if (i == arr.size() - 1) {
				System.out.printf("%s", arr.get(i));
				return;
			}
			System.out.printf("%s, ", arr.get(i));
		}
	}

	private static Double add(ArrayList<String> arr) {
		ArrayList<Double> newArray = new ArrayList<Double>();
		Double result = 0.0;
		
		// Convierte y agrega a newArray
		for (int i = 0; i < arr.size(); i++) {
			newArray.add(Double.parseDouble(arr.get(i)));
		}

		// Suma los elementos de newArray
		for (int i = 0; i < newArray.size(); i++) {
			result += newArray.get(i);
		}
		
		return result;
	}
}









/**
 * Operadores
 * =   <  ++  - ==
 * 
 * Controles de flujo
 * if   else   for  return
 * 
 * Variables primitivas
 * int
 * 
 * Varibles de tipo referencia
 * Double   ArrayList   String
 * 
 */